name: Release Service

on:
  workflow_dispatch:
    inputs:
      env:
        type: choice
        description: Environment
        options:
          - TEST
          - GIT
          - PROD
concurrency: conc-release-${{ github.repository }}

jobs:
  release:
    environment: ${{ inputs.env }}
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v5
      - name: Use Node.js
        uses: actions/setup-node@v5
        with:
          node-version: 22.x
      - name: Install dependencies
        run: npm ci
      - name: Deploying to TEST
        run: npx sls deploy --verbose --stage test --force
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        if: inputs.env == 'TEST'
      - name: Deploying to GIT
        run: npx sls deploy --verbose --stage git --force
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        if: inputs.env == 'GIT'
      - name: Deploying to PET
        run: npx sls deploy --verbose --stage pet --force
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        if: inputs.env == 'PROD'
      - name: Deploying to PROD
        run: npx sls deploy --verbose --stage prod --force
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_PROD }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_PROD }}
        if: inputs.env == 'PROD'
